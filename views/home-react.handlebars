<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>Home page</title>
        <script src="https://unpkg.com/react@17/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js"></script>
        <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link rel="stylesheet" href="css/styles.css">
    </head>
    <body>
        <h1>Home page</h1>
        <h2>Plant-based Milk</h2>

        <div id="root"></div>
        <script type="text/babel">
    //fetch data from database
    const plantbasedmilks = {{{plantbasedmilks}}}
    
    //show data list
    const Plantbasedmilks = (props) => {
    const listItems = props.plantbasedmilks.map((item) =>  
    <li key={item._id} id = {item._id} onClick={props.clickHandler}>
        {item.name}
        </li>);
    return <ul>{listItems}</ul>
    }

    // detail function
    const Detail = (props) => {
    return <div>
        {props.item.name} produced in {props.item.producer}
        </div>
    }

    // form to allow updates function
    const DetailForm = (props) => {
    return <div>
        <h2>Plant Milk Details</h2>
        <form>
        Name: <input type="text" name="name" onChange = {props.onChange} value={props.item.name || ""}/><br/>
        Producer: <input type="text" name="producer" onChange = {props.onChange} value={props.item.producer || ""}/><br/>
        
        </form>
        <button onClick = {props.onClear}>Clear</button> <button onClick = {props.onSave}>Save</button>
        </div>
    }

    //set state to show detail (new function)
    class App extends React.Component {
    constructor(props) {
    super(props);
    this.state = {current_item: {}};
    }

    showDetail = (e) => {
    const item = plantbasedmilks.find((item) => item.name == e.target.innerText)
    this.setState({"current_item" : item})  
    }

    onChange = (e) => {  
    const new_item = this.state.current_item;
    new_item[e.target.name] = e.target.value;
    this.setState({"current_item" : new_item})  
}

    onClear = () => {
    this.setState({"current_item" : {}})  
}

    onSave = () => {
    let plantmilk = this.state.current_item;
    console.log('save')
    fetch("/api/add/", {
    method: "POST",
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(plantmilk)
    })
    .then(res => res.json())
    .then((json) => { console.log(json) });
}

    render() {
        return ( 
        <div>
        <Plantbasedmilks plantbasedmilks={plantbasedmilks} clickHandler={this.showDetail}/>
        <hr/>
        <DetailForm item ={this.state.current_item} onSave = {this.onSave} onChange = {this.onChange} onClear = {this.onClear}/>
        </div> );
    }
}

ReactDOM.render(  <App />,  document.getElementById('root') );


    </script>



</body>
</html>
